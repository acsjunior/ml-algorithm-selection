set.seed(SEED)
ada_model <- caret::train(form = y ~ .,
data = df,
method = "AdaBoost.M1",
trControl = train_ctrl)
model <- ada_model
time <- as.numeric(model$times$everything[1]) / n_folds
pred <- predict(model)
cm <- caret::confusionMatrix(data = pred, reference = df$y, positive = "1", mode = "everything")
rocobj <- roc(as.numeric(as.character(df$y)), as.numeric(as.character(pred)), plot=F, ci=T, ci.sp = T)
auc <- as.numeric(auc(rocobj))
tn <- cm$table[1]
fp <- cm$table[2]
fn <- cm$table[3]
tp <- cm$table[4]
values <- data.frame(tn, tp, fn, fp)
folds <- data.frame(n_folds)
avg_time <- data.frame(time)
metrics1 <- t(as.data.frame(cm$overall))
metrics2 <- t(as.data.frame(cm$byClass))
row.names(values) <- model_label
row.names(folds) <- model_label
row.names(avg_time) <- model_label
row.names(metrics1) <- model_label
row.names(metrics2) <- model_label
concat <- cbind(values, folds, avg_time, metrics1, metrics2)
if (is.null(df_final)) {
df_final <- concat
} else {
df_final <- rbind(df_final, concat)
}
View(df_final)
require(qda)
install.packages("qda")
model_label <- "qda"
set.seed(SEED)
qda_model <- caret::train(form = y ~ .,
data = df,
method = "qda",
trControl = train_ctrl)
model <- qda_model
time <- as.numeric(model$times$everything[1]) / n_folds
pred <- predict(model)
cm <- caret::confusionMatrix(data = pred, reference = df$y, positive = "1", mode = "everything")
rocobj <- roc(as.numeric(as.character(df$y)), as.numeric(as.character(pred)), plot=F, ci=T, ci.sp = T)
auc <- as.numeric(auc(rocobj))
tn <- cm$table[1]
fp <- cm$table[2]
fn <- cm$table[3]
tp <- cm$table[4]
values <- data.frame(tn, tp, fn, fp)
folds <- data.frame(n_folds)
avg_time <- data.frame(time)
metrics1 <- t(as.data.frame(cm$overall))
metrics2 <- t(as.data.frame(cm$byClass))
row.names(values) <- model_label
row.names(folds) <- model_label
row.names(avg_time) <- model_label
row.names(metrics1) <- model_label
row.names(metrics2) <- model_label
concat <- cbind(values, folds, avg_time, metrics1, metrics2)
if (is.null(df_final)) {
df_final <- concat
} else {
df_final <- rbind(df_final, concat)
}
View(df_final)
model_label <- "svm_poly"
set.seed(SEED)
svm_poly_model <- caret::train(form = y ~ .,
data = df,
method = "svmPoly",
trControl = train_ctrl)
View(df_final)
write.csv(df_final, dec = ",", sep = ";")
write.csv2(df_final, dec = ",")
write.csv(df_final, dec = ",")
write.csv(df_final)
write.csv(df_final)
write.csv(df_final, "metrics.csv", dec = ",", sep = ";")
write.csv(df_final, "metrics.csv")
model <- rlog_model
time <- as.numeric(model$times$everything[1]) / n_folds
pred <- predict(model)
cm <- caret::confusionMatrix(data = pred, reference = df$y, positive = "1", mode = "everything")
rocobj <- roc(as.numeric(as.character(df$y)), as.numeric(as.character(pred)), plot=F, ci=T, ci.sp = T)
auc <- as.numeric(auc(rocobj))
tn <- cm$table[1]
fp <- cm$table[2]
fn <- cm$table[3]
tp <- cm$table[4]
rm(df_final)
values <- data.frame(tn, tp, fn, fp)
folds <- data.frame(n_folds)
auc <- data.frame(auc)
avg_time <- data.frame(time)
metrics1 <- t(as.data.frame(cm$overall))
metrics2 <- t(as.data.frame(cm$byClass))
row.names(values) <- model_label
row.names(folds) <- model_label
row.names(auc) <- model_label
row.names(avg_time) <- model_label
row.names(metrics1) <- model_label
row.names(metrics2) <- model_label
concat <- cbind(values, folds, auc, avg_time, metrics1, metrics2)
if (is.null(df_final)) {
df_final <- concat
} else {
df_final <- rbind(df_final, concat)
}
n_folds <- 10
train_ctrl <- trainControl(method = "cv", number = n_folds)
df_final <- NULL
if (is.null(df_final)) {
df_final <- concat
} else {
df_final <- rbind(df_final, concat)
}
rm(df_final)
df_final <- NULL
model <- rlog_model
time <- as.numeric(model$times$everything[1]) / n_folds
pred <- predict(model)
cm <- caret::confusionMatrix(data = pred, reference = df$y, positive = "1", mode = "everything")
rocobj <- roc(as.numeric(as.character(df$y)), as.numeric(as.character(pred)), plot=F, ci=T, ci.sp = T)
auc <- as.numeric(auc(rocobj))
tn <- cm$table[1]
fp <- cm$table[2]
fn <- cm$table[3]
tp <- cm$table[4]
model_label <- "rlog"
values <- data.frame(tn, tp, fn, fp)
folds <- data.frame(n_folds)
auc <- data.frame(auc)
avg_time <- data.frame(time)
metrics1 <- t(as.data.frame(cm$overall))
metrics2 <- t(as.data.frame(cm$byClass))
row.names(values) <- model_label
row.names(folds) <- model_label
row.names(auc) <- model_label
row.names(avg_time) <- model_label
row.names(metrics1) <- model_label
row.names(metrics2) <- model_label
concat <- cbind(values, folds, auc, avg_time, metrics1, metrics2)
if (is.null(df_final)) {
df_final <- concat
} else {
df_final <- rbind(df_final, concat)
}
View(df_final)
model <- rfor_model
time <- as.numeric(model$times$everything[1]) / n_folds
pred <- predict(model)
cm <- caret::confusionMatrix(data = pred, reference = df$y, positive = "1", mode = "everything")
rocobj <- roc(as.numeric(as.character(df$y)), as.numeric(as.character(pred)), plot=F, ci=T, ci.sp = T)
auc <- as.numeric(auc(rocobj))
tn <- cm$table[1]
fp <- cm$table[2]
fn <- cm$table[3]
tp <- cm$table[4]
tn <- cm$table[1]
fp <- cm$table[2]
fn <- cm$table[3]
tp <- cm$table[4]
model_label <- "rfor"
values <- data.frame(tn, tp, fn, fp)
folds <- data.frame(n_folds)
auc <- data.frame(auc)
avg_time <- data.frame(time)
metrics1 <- t(as.data.frame(cm$overall))
metrics2 <- t(as.data.frame(cm$byClass))
row.names(values) <- model_label
row.names(folds) <- model_label
row.names(auc) <- model_label
row.names(avg_time) <- model_label
row.names(metrics1) <- model_label
row.names(metrics2) <- model_label
concat <- cbind(values, folds, auc, avg_time, metrics1, metrics2)
if (is.null(df_final)) {
df_final <- concat
} else {
df_final <- rbind(df_final, concat)
}
model <- gbm_model
time <- as.numeric(model$times$everything[1]) / n_folds
pred <- predict(model)
cm <- caret::confusionMatrix(data = pred, reference = df$y, positive = "1", mode = "everything")
rocobj <- roc(as.numeric(as.character(df$y)), as.numeric(as.character(pred)), plot=F, ci=T, ci.sp = T)
auc <- as.numeric(auc(rocobj))
tn <- cm$table[1]
fp <- cm$table[2]
fn <- cm$table[3]
tp <- cm$table[4]
model_label <- "gbm"
values <- data.frame(tn, tp, fn, fp)
folds <- data.frame(n_folds)
auc <- data.frame(auc)
avg_time <- data.frame(time)
metrics1 <- t(as.data.frame(cm$overall))
metrics2 <- t(as.data.frame(cm$byClass))
row.names(values) <- model_label
row.names(folds) <- model_label
row.names(auc) <- model_label
row.names(avg_time) <- model_label
row.names(metrics1) <- model_label
row.names(metrics2) <- model_label
concat <- cbind(values, folds, auc, avg_time, metrics1, metrics2)
if (is.null(df_final)) {
df_final <- concat
} else {
df_final <- rbind(df_final, concat)
}
rm(df_final)
n_folds <- 10
train_ctrl <- trainControl(method = "cv", number = n_folds)
df_final <- NULL
model <- rlog_model
time <- as.numeric(model$times$everything[1]) / n_folds
pred <- predict(model)
cm <- caret::confusionMatrix(data = pred, reference = df$y, positive = "1", mode = "everything")
rocobj <- roc(as.numeric(as.character(df$y)), as.numeric(as.character(pred)), plot=F, ci=T, ci.sp = T)
auc <- as.numeric(auc(rocobj))
tn <- cm$table[1]
fp <- cm$table[2]
fn <- cm$table[3]
tp <- cm$table[4]
model_label <- "rlog"
values <- data.frame(tn, tp, fn, fp)
folds <- data.frame(n_folds)
auc <- data.frame(auc)
avg_time <- data.frame(time)
metrics1 <- t(as.data.frame(cm$overall))
metrics2 <- t(as.data.frame(cm$byClass))
row.names(values) <- model_label
row.names(folds) <- model_label
row.names(auc) <- model_label
row.names(avg_time) <- model_label
row.names(metrics1) <- model_label
row.names(metrics2) <- model_label
concat <- cbind(values, folds, auc, avg_time, metrics1, metrics2)
if (is.null(df_final)) {
df_final <- concat
} else {
df_final <- rbind(df_final, concat)
}
model <- rfor_model
time <- as.numeric(model$times$everything[1]) / n_folds
pred <- predict(model)
cm <- caret::confusionMatrix(data = pred, reference = df$y, positive = "1", mode = "everything")
rocobj <- roc(as.numeric(as.character(df$y)), as.numeric(as.character(pred)), plot=F, ci=T, ci.sp = T)
auc <- as.numeric(auc(rocobj))
tn <- cm$table[1]
fp <- cm$table[2]
fn <- cm$table[3]
tp <- cm$table[4]
tn <- cm$table[1]
fp <- cm$table[2]
fn <- cm$table[3]
tp <- cm$table[4]
model_label <- "rfor"
values <- data.frame(tn, tp, fn, fp)
folds <- data.frame(n_folds)
auc <- data.frame(auc)
avg_time <- data.frame(time)
metrics1 <- t(as.data.frame(cm$overall))
metrics2 <- t(as.data.frame(cm$byClass))
row.names(values) <- model_label
row.names(folds) <- model_label
row.names(auc) <- model_label
row.names(avg_time) <- model_label
row.names(metrics1) <- model_label
row.names(metrics2) <- model_label
concat <- cbind(values, folds, auc, avg_time, metrics1, metrics2)
if (is.null(df_final)) {
df_final <- concat
} else {
df_final <- rbind(df_final, concat)
}
model <- gbm_model
time <- as.numeric(model$times$everything[1]) / n_folds
pred <- predict(model)
cm <- caret::confusionMatrix(data = pred, reference = df$y, positive = "1", mode = "everything")
rocobj <- roc(as.numeric(as.character(df$y)), as.numeric(as.character(pred)), plot=F, ci=T, ci.sp = T)
auc <- as.numeric(auc(rocobj))
tn <- cm$table[1]
fp <- cm$table[2]
fn <- cm$table[3]
tp <- cm$table[4]
model_label <- "gbm"
values <- data.frame(tn, tp, fn, fp)
folds <- data.frame(n_folds)
auc <- data.frame(auc)
avg_time <- data.frame(time)
metrics1 <- t(as.data.frame(cm$overall))
metrics2 <- t(as.data.frame(cm$byClass))
row.names(values) <- model_label
row.names(folds) <- model_label
row.names(auc) <- model_label
row.names(avg_time) <- model_label
row.names(metrics1) <- model_label
row.names(metrics2) <- model_label
concat <- cbind(values, folds, auc, avg_time, metrics1, metrics2)
if (is.null(df_final)) {
df_final <- concat
} else {
df_final <- rbind(df_final, concat)
}
model <- xgb_model
time <- as.numeric(model$times$everything[1]) / n_folds
pred <- predict(model)
cm <- caret::confusionMatrix(data = pred, reference = df$y, positive = "1", mode = "everything")
rocobj <- roc(as.numeric(as.character(df$y)), as.numeric(as.character(pred)), plot=F, ci=T, ci.sp = T)
auc <- as.numeric(auc(rocobj))
tn <- cm$table[1]
fp <- cm$table[2]
fn <- cm$table[3]
tp <- cm$table[4]
model_label <- "xgb"
values <- data.frame(tn, tp, fn, fp)
folds <- data.frame(n_folds)
auc <- data.frame(auc)
avg_time <- data.frame(time)
metrics1 <- t(as.data.frame(cm$overall))
metrics2 <- t(as.data.frame(cm$byClass))
row.names(values) <- model_label
row.names(folds) <- model_label
row.names(auc) <- model_label
row.names(avg_time) <- model_label
row.names(metrics1) <- model_label
row.names(metrics2) <- model_label
concat <- cbind(values, folds, auc, avg_time, metrics1, metrics2)
if (is.null(df_final)) {
df_final <- concat
} else {
df_final <- rbind(df_final, concat)
}
model <- mlp_model
time <- as.numeric(model$times$everything[1]) / n_folds
pred <- predict(model)
cm <- caret::confusionMatrix(data = pred, reference = df$y, positive = "1", mode = "everything")
rocobj <- roc(as.numeric(as.character(df$y)), as.numeric(as.character(pred)), plot=F, ci=T, ci.sp = T)
auc <- as.numeric(auc(rocobj))
tn <- cm$table[1]
fp <- cm$table[2]
fn <- cm$table[3]
tp <- cm$table[4]
model_label <- "mlp"
values <- data.frame(tn, tp, fn, fp)
folds <- data.frame(n_folds)
auc <- data.frame(auc)
avg_time <- data.frame(time)
metrics1 <- t(as.data.frame(cm$overall))
metrics2 <- t(as.data.frame(cm$byClass))
row.names(values) <- model_label
row.names(folds) <- model_label
row.names(auc) <- model_label
row.names(avg_time) <- model_label
row.names(metrics1) <- model_label
row.names(metrics2) <- model_label
concat <- cbind(values, folds, auc, avg_time, metrics1, metrics2)
if (is.null(df_final)) {
df_final <- concat
} else {
df_final <- rbind(df_final, concat)
}
model <- lda_model
time <- as.numeric(model$times$everything[1]) / n_folds
pred <- predict(model)
cm <- caret::confusionMatrix(data = pred, reference = df$y, positive = "1", mode = "everything")
rocobj <- roc(as.numeric(as.character(df$y)), as.numeric(as.character(pred)), plot=F, ci=T, ci.sp = T)
auc <- as.numeric(auc(rocobj))
tn <- cm$table[1]
fp <- cm$table[2]
fn <- cm$table[3]
tp <- cm$table[4]
model_label <- "lda"
values <- data.frame(tn, tp, fn, fp)
folds <- data.frame(n_folds)
auc <- data.frame(auc)
avg_time <- data.frame(time)
metrics1 <- t(as.data.frame(cm$overall))
metrics2 <- t(as.data.frame(cm$byClass))
row.names(values) <- model_label
row.names(folds) <- model_label
row.names(auc) <- model_label
row.names(avg_time) <- model_label
row.names(metrics1) <- model_label
row.names(metrics2) <- model_label
concat <- cbind(values, folds, auc, avg_time, metrics1, metrics2)
if (is.null(df_final)) {
df_final <- concat
} else {
df_final <- rbind(df_final, concat)
}
model <- knn_model
time <- as.numeric(model$times$everything[1]) / n_folds
pred <- predict(model)
cm <- caret::confusionMatrix(data = pred, reference = df$y, positive = "1", mode = "everything")
rocobj <- roc(as.numeric(as.character(df$y)), as.numeric(as.character(pred)), plot=F, ci=T, ci.sp = T)
auc <- as.numeric(auc(rocobj))
tn <- cm$table[1]
fp <- cm$table[2]
fn <- cm$table[3]
tp <- cm$table[4]
model_label <- "knn"
values <- data.frame(tn, tp, fn, fp)
folds <- data.frame(n_folds)
auc <- data.frame(auc)
avg_time <- data.frame(time)
metrics1 <- t(as.data.frame(cm$overall))
metrics2 <- t(as.data.frame(cm$byClass))
row.names(values) <- model_label
row.names(folds) <- model_label
row.names(auc) <- model_label
row.names(avg_time) <- model_label
row.names(metrics1) <- model_label
row.names(metrics2) <- model_label
concat <- cbind(values, folds, auc, avg_time, metrics1, metrics2)
if (is.null(df_final)) {
df_final <- concat
} else {
df_final <- rbind(df_final, concat)
}
model <- svm_model
time <- as.numeric(model$times$everything[1]) / n_folds
pred <- predict(model)
cm <- caret::confusionMatrix(data = pred, reference = df$y, positive = "1", mode = "everything")
rocobj <- roc(as.numeric(as.character(df$y)), as.numeric(as.character(pred)), plot=F, ci=T, ci.sp = T)
auc <- as.numeric(auc(rocobj))
tn <- cm$table[1]
fp <- cm$table[2]
fn <- cm$table[3]
tp <- cm$table[4]
model_label <- "svm"
values <- data.frame(tn, tp, fn, fp)
folds <- data.frame(n_folds)
auc <- data.frame(auc)
avg_time <- data.frame(time)
metrics1 <- t(as.data.frame(cm$overall))
metrics2 <- t(as.data.frame(cm$byClass))
row.names(values) <- model_label
row.names(folds) <- model_label
row.names(auc) <- model_label
row.names(avg_time) <- model_label
row.names(metrics1) <- model_label
row.names(metrics2) <- model_label
concat <- cbind(values, folds, auc, avg_time, metrics1, metrics2)
if (is.null(df_final)) {
df_final <- concat
} else {
df_final <- rbind(df_final, concat)
}
model <- c50_model
time <- as.numeric(model$times$everything[1]) / n_folds
pred <- predict(model)
cm <- caret::confusionMatrix(data = pred, reference = df$y, positive = "1", mode = "everything")
rocobj <- roc(as.numeric(as.character(df$y)), as.numeric(as.character(pred)), plot=F, ci=T, ci.sp = T)
auc <- as.numeric(auc(rocobj))
tn <- cm$table[1]
fp <- cm$table[2]
fn <- cm$table[3]
tp <- cm$table[4]
model_label <- "c50"
values <- data.frame(tn, tp, fn, fp)
folds <- data.frame(n_folds)
auc <- data.frame(auc)
avg_time <- data.frame(time)
metrics1 <- t(as.data.frame(cm$overall))
metrics2 <- t(as.data.frame(cm$byClass))
row.names(values) <- model_label
row.names(folds) <- model_label
row.names(auc) <- model_label
row.names(avg_time) <- model_label
row.names(metrics1) <- model_label
row.names(metrics2) <- model_label
concat <- cbind(values, folds, auc, avg_time, metrics1, metrics2)
if (is.null(df_final)) {
df_final <- concat
} else {
df_final <- rbind(df_final, concat)
}
model <- qda_model
time <- as.numeric(model$times$everything[1]) / n_folds
pred <- predict(model)
cm <- caret::confusionMatrix(data = pred, reference = df$y, positive = "1", mode = "everything")
rocobj <- roc(as.numeric(as.character(df$y)), as.numeric(as.character(pred)), plot=F, ci=T, ci.sp = T)
auc <- as.numeric(auc(rocobj))
tn <- cm$table[1]
fp <- cm$table[2]
fn <- cm$table[3]
tp <- cm$table[4]
model_label <- "qda"
values <- data.frame(tn, tp, fn, fp)
folds <- data.frame(n_folds)
auc <- data.frame(auc)
avg_time <- data.frame(time)
metrics1 <- t(as.data.frame(cm$overall))
metrics2 <- t(as.data.frame(cm$byClass))
row.names(values) <- model_label
row.names(folds) <- model_label
row.names(auc) <- model_label
row.names(avg_time) <- model_label
row.names(metrics1) <- model_label
row.names(metrics2) <- model_label
concat <- cbind(values, folds, auc, avg_time, metrics1, metrics2)
if (is.null(df_final)) {
df_final <- concat
} else {
df_final <- rbind(df_final, concat)
}
View(df_final)
write.csv(df_final, "metrics.csv")
